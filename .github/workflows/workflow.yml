name: Deploy bot

on: 
  push:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt 
        pip install -r bot/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        python backend/manage.py test

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./bot
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/coffee_bot:latest 

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker compose stop
            sudo docker compose rm backend bot
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/coffee_bot

            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} >> .env
            echo URL=${{ secrets.URL }} >> .env
            echo URL_API=${{ secrets.URL_API }} >> .env
            echo GOOGLE_SERVICE_ACCOUNT=${{ secrets.GOOGLE_SERVICE_ACCOUNT }} >> .env
            echo CREDENTIALS_FILE=${{ secrets.CREDENTIALS_FILE }} >> .env
            echo SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }} >> .env
            echo SHEET_ID=${{ secrets.SHEET_ID }} >> .env
            echo HOST_IP=${{ secrets.HOST }} >> .env
            echo DOMAIN_NAIM=${{ secrets.DOMAIN_NAIM }} >> .env

            
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/coffee_bot
            sudo docker compose up -d
            sudo ./upd.sh

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен! http://${{ secrets.HOST }}/
